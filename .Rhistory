theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title = "Daily number of confirmed cases",
subtitle = "subdivided across type",
x = "Date of confirmation",
fill = "Type")
type_pie <- colombia_covid %>%
group_by(Tipo) %>%
count() %>%
ungroup() %>%
mutate(per=`n`/sum(`n`)) %>%
arrange(desc(Tipo))
type_pie$label <- scales::percent(type_pie$per)
type_pie<-type_pie[names(type_pie)!="per"]
colnames(type_pie)<-c("Tipo", "Total number", "Percentage")
type_pie
#Running poisson with just the variable representing the time as predictor
poisson1 <- glm(`Cumulative cases` ~ `Elapsed time`, data=cases, family=poisson)
par(mfrow=c(2,2))
plot(poisson1)
pred.pois <- poisson1$fitted.values
res.st <- (cases$`Cumulative cases` - pred.pois)/sqrt(pred.pois)
#n=25
#k=2
#n-k=23
print(paste("Estimated overdispersion", sum(res.st^2)/23))
paste("AIC:", poisson1$aic)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(poisson1$null.deviance, deviance(poisson1)), 2))
#Running poisson with just the variable representing the time as predictor
poisson1A <- glm(`Cumulative cases/Department` ~ `Elapsed time`, data=cases_relev_dep, family=poisson)
summary(poisson1A)
poisson1A <- glm(`New cases/day` ~ `Elapsed time`, data=cases, family=poisson)
par(mfrow=c(2,2))
plot(poisson1A)
#print(paste("Estimated overdispersion", sum(res.st^2)/23))
paste("AIC:", poisson1A$aic)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(poisson1A$null.deviance, deviance(poisson1A)), 2))
covid19 <- dplyr::select(colombia_covid, -c(`Ciudad de ubicación`,`Atención`,`Tipo`))
library(fastDummies)
covid19_dummy <- dummy_cols(covid19, select_columns = c("Departamento o Distrito", "Grupo de edad", "Sexo", "País de procedencia", "Continente de procedencia"), remove_first_dummy = TRUE, ignore_na=TRUE, split="-", remove_selected_columns=TRUE)
group_dummy <- covid19_dummy %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_all(funs(sum)) %>%
dplyr::select(-c(`Fecha de diagnóstico`,`ID de caso`))
data1 <- bind_cols(cases, group_dummy)
poisson2 <- glm(`Cumulative cases` ~ `Elapsed time` + Sexo_M, data=data1, family=poisson)
par(mfrow=c(2,2))
plot(poisson2)
paste("AIC:", poisson2$aic)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(poisson2$null.deviance, deviance(poisson2)), 2))
poisson3 <- glm(`Cumulative cases` ~ `Elapsed time` + `Grupo de edad_19_30` + `Grupo de edad_31_45` + `Grupo de edad_46_60` + `Grupo de edad_60_75` + `Grupo de edad_76+`, data=data1, family=poisson)
par(mfrow=c(2,2))
plot(poisson3)
pred.pois3 <- poisson3$fitted.values
res.st3 <- (data1$`Cumulative cases` - pred.pois3)/sqrt(pred.pois3)
#n=25
#k=7
#n-k=18
print(paste("Estimated overdispersion", est.overdispersion <- sum(res.st3^2)/18))
paste("AIC:", poisson3$aic)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(poisson3$null.deviance, deviance(poisson3)), 2))
#Running poisson with the variable representing time, age and departments as predictors
poisson4 <- glm(`Cumulative cases` ~ `Elapsed time` + `Grupo de edad_19_30` + `Grupo de edad_31_45` + `Grupo de edad_46_60` + `Grupo de edad_60_75` + `Grupo de edad_76+` + `Departamento o Distrito_Bogotá D.C.` + `Departamento o Distrito_Boyacá` + `Departamento o Distrito_Caldas` + `Departamento o Distrito_Casanare` + `Departamento o Distrito_Cauca` + `Departamento o Distrito_Cundinamarca` + `Departamento o Distrito_Meta` + `Departamento o Distrito_Quindío` + `Departamento o Distrito_Risaralda` + `Departamento o Distrito_Santander` + `Departamento o Distrito_Tolima` + `Departamento o Distrito_Valle del Cauca`, data=data1, family=poisson)
par(mfrow=c(2,2))
plot(poisson4)
pred.pois4 <- poisson4$fitted.values
res.st4 <- (data1$`Cumulative cases` - pred.pois4)/sqrt(pred.pois4)
#n=25
#k=19
#n-k=6
print(paste("Estimated overdispersion", est.overdispersion <- sum(res.st4^2)/6))
paste("AIC:", poisson4$aic)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(poisson4$null.deviance, deviance(poisson4)), 2))
#poisson5 <- glm(`Cumulative cases` ~ `Elapsed time` + `Grupo de edad_19_30` + `Grupo de edad_31_45` + `Grupo de edad_46_60` + `Grupo de edad_60_75` + `Grupo de edad_76+` + `Departamento o Distrito_Bogotá D.C.`+`Departamento o Distrito_Boyacá`+`Departamento o Distrito_Caldas` + `Departamento o Distrito_Casanare`+`Departamento o Distrito_Cauca`+`Departamento o Distrito_Cundinamarca`+`Departamento o Distrito_Meta`+`Departamento o Distrito_Quindío`+`Departamento o Distrito_Risaralda`+`Departamento o Distrito_Santander`+`Departamento o Distrito_Tolima`+`Departamento o Distrito_Valle del Cauca`+`Continente de procedencia_Asia`+`Continente de procedencia_Centroamérica`+`Continente de procedencia_Colombia`+`Continente de procedencia_Europa`+`Continente de procedencia_Norteamérica` + `Continente de procedencia_Sudamerica`, data=data1, family=poisson)
#par(mfrow=c(2,2))
#plot(poisson5)
#paste("AIC:", poisson5$aic)
#paste(c("Null deviance: ", "Residual deviance:"),
#       round(c(poisson5$null.deviance, deviance(poisson5)), 2))
#anova(poisson1, poisson3, poisson4, poisson5, test="Chisq")
anova(poisson1, poisson3, poisson4, test="Chisq")
poisson1quasi <- glm(`Cumulative cases` ~ `Elapsed time`, data=cases, family=quasipoisson)
par(mfrow=c(2,2))
plot(poisson1quasi)
pred.poisq <- poisson1quasi$fitted.values
res.stq <- (data1$`Cumulative cases` - pred.poisq)/sqrt(summary(poisson1quasi)$dispersion*pred.poisq)
print(paste("Estimated overdispersion", sum(res.stq^2)/23))
paste("AIC:", poisson1quasi$aic)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(poisson1quasi$null.deviance, deviance(poisson1quasi)), 2))
#Let's apply a quasi poisson and see what happens
poisson2quasi <- glm(`Cumulative cases` ~ `Elapsed time` + `Grupo de edad_19_30` + `Grupo de edad_31_45` + `Grupo de edad_46_60` + `Grupo de edad_60_75` + `Grupo de edad_76+`, data=data1, family=quasipoisson)
par(mfrow=c(2,2))
plot(poisson1quasi)
pred.poisq2 <- poisson2quasi$fitted.values
res.stq2 <- (data1$`Cumulative cases` - pred.poisq2)/sqrt(summary(poisson2quasi)$dispersion*pred.poisq2)
print(paste("Estimated overdispersion", sum(res.stq2^2)/18))
paste("AIC:", poisson2quasi$aic)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(poisson2quasi$null.deviance, deviance(poisson2quasi)), 2))
nb1 <- glm.nb(`Cumulative cases` ~ `Elapsed time`, data=data1)
par(mfrow=c(2,2))
plot(nb1)
#n=25, k=2, n-k=23
stdres <- rstandard(nb1)
print(paste("Estimated overdispersion", sum(stdres^2)/23))
paste(c("Null deviance: ", "Residual deviance:"),
round(c(nb1$null.deviance, deviance(nb1)), 2))
nb2 <- glm.nb(`Cumulative cases` ~ `Elapsed time` + `Grupo de edad_19_30` + `Grupo de edad_31_45` + `Grupo de edad_46_60` + `Grupo de edad_60_75` + `Grupo de edad_76+`, data=data1)
par(mfrow=c(2,2))
plot(nb2)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(nb2$null.deviance, deviance(nb2)), 2))
nb3 <- glm.nb(`Cumulative cases` ~ `Elapsed time` + `Departamento o Distrito_Bogotá D.C.` + `Departamento o Distrito_Boyacá`+`Departamento o Distrito_Caldas`+`Departamento o Distrito_Casanare`+`Departamento o Distrito_Cauca`+`Departamento o Distrito_Cundinamarca`+`Departamento o Distrito_Meta`+`Departamento o Distrito_Quindío`+`Departamento o Distrito_Risaralda`+`Departamento o Distrito_Santander`+`Departamento o Distrito_Tolima`+`Departamento o Distrito_Valle del Cauca`, data=data1)
par(mfrow=c(2,2))
plot(nb3)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(nb3$null.deviance, deviance(nb3)), 2))
nb4 <- glm.nb(`Cumulative cases` ~ `Elapsed time` + `Continente de procedencia_Asia`+`Continente de procedencia_Centroamérica`+`Continente de procedencia_Colombia`+`Continente de procedencia_Europa`+`Continente de procedencia_Norteamérica`+`Continente de procedencia_Sudamerica`, data=data1)
par(mfrow=c(2,2))
plot(nb4)
paste(c("Null deviance: ", "Residual deviance:"),
round(c(nb4$null.deviance, deviance(nb4)), 2))
nb5 <- glm.nb(`Cumulative cases` ~ `Elapsed time` + `Grupo de edad_19_30` + `Grupo de edad_31_45` + `Grupo de edad_46_60` + `Grupo de edad_60_75` + `Grupo de edad_76+` + `Departamento o Distrito_Bogotá D.C.`+`Departamento o Distrito_Boyacá`+`Departamento o Distrito_Caldas`+`Departamento o Distrito_Casanare`+`Departamento o Distrito_Cauca`+`Departamento o Distrito_Cundinamarca`+`Departamento o Distrito_Meta`+`Departamento o Distrito_Quindío`+`Departamento o Distrito_Risaralda`+`Departamento o Distrito_Santander`+`Departamento o Distrito_Tolima`+`Departamento o Distrito_Valle del Cauca`, data=data1)
par(mfrow=c(2,2))
plot(nb5)
# Calculating overdispersion n=25 k=19 n-k=6
stdres <- rstandard(nb5)
print(paste("Estimated overdispersion", sum(stdres^2)/6))
paste(c("Null deviance: ", "Residual deviance:"),
round(c(nb5$null.deviance, deviance(nb5)), 2))
#Applying ANOVA to compare the negative binomial models
anova(nb1, nb2, nb5)
model.Poisson <- stan_model("stan/poisson_regression.stan")
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, fig.asp=0.625, dev='png', global.par = TRUE, dev.args=list(pointsize=10), fig.path = 'figs/')
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = FALSE)#, tidy = TRUE)
library(MASS)
library(readr)
library(dplyr)
library(ggplot2)
library(bayesplot)
library(ggthemes)
library(ggrepel)
library(RColorBrewer)
library(leaflet)
library(geojsonio)
library(htmltools)
library(htmlwidgets)
library(rstan)
library(lubridate)
colombia_covid <- as.data.frame(read_csv("data/datasets_567855_1056808_Casos1.csv"))
colnames(colombia_covid)[5] <- "Atención"
colnames(colombia_covid)[8] <- "Tipo"
# slicing the main dataset
central.colombia.dep <- c("Bogotá D.C.", "Tolima", "Cundinamarca", "Meta", "Boyacá", "Quindío", "Cauca",
"Valle del Cauca", "Risaralda", "Caldas", "Boyacá", "Antioquia", "Santander", "Casanare")
central.colombia.rows <- which(colombia_covid$`Departamento o Distrito` %in% central.colombia.dep)
colombia_covid <- colombia_covid[central.colombia.rows, ]
#lat-long
#bogota<c(4.592164298, -74.072166378, 542)
valle_de_cauca<-c("Valle del Cauca", 3.4372200, -76.5225000, 150)
cauca<-c("Cauca", 2.43823, -76.6131592, 12)
antioquia<-c("Antioquia",6.2518400, -75.5635900, 127)
cartagena<-c("Cartagena D.T. y C", 10.39972, -75.51444, 39)
huila<-c("Huila", 2.9273, -75.2818909, 30)
meta<-c("Meta", 4.1420000, -73.6266400, 12)
risaralda<-c("Risaralda", 4.8133302, -75.6961136, 35)
norte_santander<-c("Norte de Santander", 7.8939100, -72.5078200, 21)
caldas<-c("Caldas", 5.0688900, -75.5173800, 16)
cudinamarca<-c("Cundinamarca", 4.862437, -74.058655, 42)
barraquilla<-c("Barranquilla D.E.", 10.9685400, -74.7813200, 35) #atlantico
santader<-c("Santander", 7.1253900, -73.1198000, 12)
quindio<-c("Quindío", 4.535000, -75.675690, 23)
tolima<-c("Tolima", 4.43889, -75.2322235, 14)
santa_marta<-c("Santa Marta D.T. y C.", 11.24079, -74.19904, 12)
cesar<-c("Cesar", 10.4631400, -73.2532200, 16)
san_andres<-c("San Andrés", 12.5847197, -81.7005615, 2)
casanare<-c("Casanare", 5.3377500, -72.3958600, 2)
narino<-c("Nariño", 1.2136100, -77.2811100, 6)
boyaca<-c("Boyacá", 5.767222, -72.940651, 6)
cordoba<-c("Córdoba", 8.7479800, -75.8814300, 2)
bolivar<-c("Bolívar", 10.3997200, -75.5144400, 3)
sucre<-c("Sucre", 9.3047199, -75.3977814, 1)
guajira<-c("La Guajira", 11.5444400, -72.9072200, 1)
gis_data<-data.frame(name="Bogotá D.C.", latitude=4.624335, longitude=-74.063644, cases=542) #bogotà
gis_data$name<-as.character(gis_data$name)
gis_data<-rbind(gis_data, cauca)
gis_data<-rbind(gis_data, valle_de_cauca)
gis_data<-rbind(gis_data, antioquia)
gis_data<-rbind(gis_data, cartagena)
gis_data<-rbind(gis_data, huila)
gis_data<-rbind(gis_data, meta)
gis_data<-rbind(gis_data, risaralda)
gis_data<-rbind(gis_data, norte_santander)
gis_data<-rbind(gis_data, caldas)
gis_data<-rbind(gis_data, cudinamarca)
gis_data<-rbind(gis_data, barraquilla)
gis_data<-rbind(gis_data, santader)
gis_data<-rbind(gis_data, quindio)
gis_data<-rbind(gis_data, tolima)
gis_data<-rbind(gis_data, santa_marta)
gis_data<-rbind(gis_data, cesar)
gis_data<-rbind(gis_data, san_andres)
gis_data<-rbind(gis_data, casanare)
gis_data<-rbind(gis_data, narino)
gis_data<-rbind(gis_data, boyaca)
gis_data<-rbind(gis_data, cordoba)
gis_data<-rbind(gis_data, bolivar)
gis_data<-rbind(gis_data, sucre)
gis_data<-rbind(gis_data, guajira)
gis_data$latitude<-as.numeric(gis_data$latitude)
gis_data$longitude<-as.numeric(gis_data$longitude)
gis_data$cases<-as.numeric(gis_data$cases)
dept<-geojsonio::geojson_read("data/Colombia.geo.json", what="sp")
#slice the gis_data dataset
central_gis_data<-gis_data[which(gis_data$name %in% central.colombia.dep),]
#slice the geojson dataset
central_dept<-c("SANTAFE DE BOGOTA D.C", "TOLIMA", "CUNDINAMARCA", "META", "BOYACA", "QUINDIO", "CAUCA", "VALLE DEL CAUCA", "RISARALDA", "CALDAS", "BOYACA", "ANTIOQUIA", "SANTANDER", "CASANARE")
central.dept<-dept[which(dept@data$NOMBRE_DPT %in% central_dept),]
getColor <- function(central_gis_data) {
sapply(central_gis_data$cases, function(cases) {
if(cases <= 10) {
"green"
} else if(cases <= 100) {
"orange"
} else {
"red"
} })
}
icons <- awesomeIcons(
icon = 'ios-close',
iconColor = 'black',
library = 'ion',
markerColor = getColor(central_gis_data)
)
#now colombia is yellow and our departments are red
central_map <- leaflet(data=central_gis_data) %>% addTiles() %>%
addAwesomeMarkers(~longitude, ~latitude, icon=icons, label = ~htmlEscape(paste(name,cases,sep=" : "))) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(data=dept,
opacity=0.1,
color="yellow",
fillOpacity = 0.1) %>%
addPolygons(data=central.dept,
opacity = 0.2,
color = "red",
dashArray = "3",
fillOpacity = 0.1)
#saveWidget(central_map, file="figs/central_colombia.html")
central_map
# there were missing rows
colombia_covid$`ID de caso` <- 1:dim(colombia_covid)[1]
## day column in "international" format (so that R can fix the sorting properly)
colombia_covid$`Fecha de diagnóstico` <- as.Date(colombia_covid$`Fecha de diagnóstico`, format="%d/%m/%Y")
colombia_covid <- colombia_covid %>% mutate("Grupo de edad" = case_when(Edad <= 18 ~ '0_18',
Edad >= 19  & Edad <= 30 ~ '19_30',
Edad >=  31 & Edad <= 45 ~ '31_45',
Edad >= 46 & Edad <= 60 ~ '46_60',
Edad >=61 & Edad <= 75 ~ '60_75',
Edad >=76 ~ '76+'))
#colombia_covid$`Grupo de edad` <- as.factor(colombia_covid$`Grupo de edad`)
#colombia_covid$`Departamento o Distrito` <- as.factor(colombia_covid$`Departamento o Distrito`)
colombia_covid$`Ciudad de ubicación` <- as.factor(colombia_covid$`Ciudad de ubicación`)
#colombia_covid$Sexo <- as.factor(colombia_covid$Sexo)
colombia_covid$Atención <- as.factor(colombia_covid$Atención)
colombia_covid$Tipo <- as.factor(colombia_covid$Tipo)
sort(unique(colombia_covid$`País de procedencia`))
colombia_covid$`País de procedencia`[colombia_covid$`País de procedencia` == "Isla Martin - Caribe"] <- "Islas San Martin"
colombia_covid$`País de procedencia`[colombia_covid$`País de procedencia` == "Israel Egipto"] <- "Israel - Egipto"
colombia_covid$`País de procedencia`[colombia_covid$`País de procedencia` == "Jamaica - Isla Caimán - Panamá"] <- "Jamaica - Panamá - Isla Caimán"
colombia_covid$`País de procedencia`[colombia_covid$`País de procedencia` == "Madrid"] <- "España"
colombia_covid$`País de procedencia`[colombia_covid$`País de procedencia` == "Londres"] <- "Inglaterra"
colombia_covid$`País de procedencia`[colombia_covid$`País de procedencia` == "Alemania - Estambul"] <- "Alemania - Turquía"
colombia_covid$`País de procedencia`[colombia_covid$`País de procedencia` == "Jamaica - Panamá - Islas del caribe - Cartagena"] <- "Jamaica - Panamá - Colombia"
#colombia_covid$`País de procedencia` <- as.factor(colombia_covid$`País de procedencia`)
Europa <- c("Alemania", "Bélgica", "Europa",  "Croacia", "España", "España - Croacia", "España - Croacia - Bosnia",  "España - Francia", "España - Italia", "Francia", "Francia - Holanda", "Grecia", "Inglaterra", "Italia", "Italia - Ucrania - España", "Suiza")
Asia <- c("Arabia", "Emiratos Árabes", "Turquía")
África <- c("Egipto", "Marruecos")
Norteamérica <- c("Canadá", "Estados Unidos", "México")
Centroamérica <- c("Aruba", "Costa Rica", "Cuba", "Guatemala", "Islas San Martin", "Jamaica", "Jamaica - Panamá - Isla Caimán", "Jamaica - Panamá - Islas del caribe - Cartagena", "Panamá", "Panamá - Jamaica", "Puerto Rico", "República Dominicana")
Sudamerica <- c("Argentina", "Brasil", "Chile", "Ecuador", "Perú", "Venezuela")
# Alemania - Turquía", "España - India", "España - Turquia", "Italia - España - Turquía", "Turquía - Grecia" -> "Europa - Asia"
# "España - Egipto" -> "Europa - África"
# "Israel - Egipto" -> "Asia - África"
# "Italia - Jamaica - Panamá" -> "Europa - Centroamérica"
# "Colombia" -> "Colombia"
for (i in 1:nrow(colombia_covid)) {
if (colombia_covid$`País de procedencia`[i] %in% Europa){
colombia_covid$`Continente de procedencia`[i] <- "Europa"}
else if (colombia_covid$`País de procedencia`[i] %in% Asia){
colombia_covid$`Continente de procedencia`[i] <- "Asia"}
else if (colombia_covid$`País de procedencia`[i] %in% África){
colombia_covid$`Continente de procedencia`[i] <- "África"}
else if (colombia_covid$`País de procedencia`[i] %in% Norteamérica){
colombia_covid$`Continente de procedencia`[i] <- "Norteamérica"}
else if (colombia_covid$`País de procedencia`[i] %in% Centroamérica){
colombia_covid$`Continente de procedencia`[i] <- "Centroamérica"}
else if (colombia_covid$`País de procedencia`[i] %in% Sudamerica){
colombia_covid$`Continente de procedencia`[i] <- "Sudamerica"}
else if (colombia_covid$`País de procedencia`[i] == "Colombia"){
colombia_covid$`Continente de procedencia`[i] <- "Colombia"}
else if (colombia_covid$`País de procedencia`[i] == "Alemania - Turquía"){
colombia_covid$`Continente de procedencia`[i] <- "Europa - Asia"}
else if (colombia_covid$`País de procedencia`[i] == "España - India")
colombia_covid$`Continente de procedencia`[i] <- "Europa - Asia"
else if (colombia_covid$`País de procedencia`[i] == "España - Turquia")
colombia_covid$`Continente de procedencia`[i] <- "Europa - Asia"
else if (colombia_covid$`País de procedencia`[i] == "Italia - España - Turquía")
colombia_covid$`Continente de procedencia`[i] <- "Europa - Asia"
else if (colombia_covid$`País de procedencia`[i] == "Turquía - Grecia")
colombia_covid$`Continente de procedencia`[i] <- "Europa - Asia"
else if (colombia_covid$`País de procedencia`[i] == "España - Egipto")
colombia_covid$`Continente de procedencia`[i] <- "Europa - África"
else if (colombia_covid$`País de procedencia`[i] == "Israel - Egipto")
colombia_covid$`Continente de procedencia`[i] <- "Asia - África"
else if (colombia_covid$`País de procedencia`[i] == "Italia - Jamaica - Panamá")
colombia_covid$`Continente de procedencia`[i] <- "Europa - Centroamérica"
}
#colombia_covid$`Continente de procedencia` <- as.factor(colombia_covid$`Continente de procedencia`)
# Transforming the 0 value into a null value
colombia_covid[911,]$`País de procedencia` <- NA
head(colombia_covid)
cases <- colombia_covid %>%
group_by(`Fecha de diagnóstico`) %>%
count() %>% rename("Date" = `Fecha de diagnóstico`, "New cases/day" = n)
cases2 <- colombia_covid %>%
group_by(`Fecha de diagnóstico`) %>%
summarise(`Cumulative cases` = max(`ID de caso`))
cases <- bind_cols(cases, cases2%>%
dplyr::select(-c(`Fecha de diagnóstico`)))
cases <- as.data.frame(cases)
cases <- cases %>% mutate(BETWEEN0 = as.numeric(difftime(Date, lag(Date, 1), units = "days")),
BETWEEN = ifelse(is.na(BETWEEN0), 0, BETWEEN0), `Elapsed time` =
cumsum(as.numeric(BETWEEN))) %>% dplyr::select(-c(BETWEEN0,BETWEEN))
cases_dep <- colombia_covid %>%
group_by(`Fecha de diagnóstico`,`Departamento o Distrito`) %>%
count() %>% rename("Date" = `Fecha de diagnóstico`, "Department"=`Departamento o Distrito`, "New cases/day" = n)
cases_dep <- cases_dep %>%
group_by(`Department`) %>%
mutate(`Cumulative cases/Department` = cumsum(`New cases/day`))
cases_dep <- as.data.frame(cases_dep)
cases_dep <- cases_dep %>% mutate(BETWEEN0 = as.numeric(difftime(Date, lag(Date, 1), units = "days")),
BETWEEN = ifelse(is.na(BETWEEN0), 0, BETWEEN0), `Elapsed time` =
cumsum(as.numeric(BETWEEN))) %>% dplyr::select(-c(BETWEEN0,BETWEEN))
#departments with more than 30 cases:
relevant <- unique(cases_dep[cases_dep$`Cumulative cases/Department`>30,]$Department)
cases_relev_dep <- as.data.frame(subset(cases_dep, Department %in% relevant))
cases_relev_dep <- cases_relev_dep[order(cases_relev_dep$Department), ]
cases_relev_dep <- cases_relev_dep[, c(1,5,2,3,4)]
head(cases_relev_dep)
theme_set(theme_classic())
colorCount<-length(unique(colombia_covid$`Departamento o Distrito`))
getPalette<-colorRampPalette(brewer.pal(9, "Spectral"))(colorCount)
ggplot(colombia_covid, aes(x = `Fecha de diagnóstico`)) +
scale_fill_manual(values = getPalette) +
geom_histogram(aes(fill=`Departamento o Distrito`), width = 0.8, stat="count") +
theme(axis.text.x = element_text(angle=65, vjust=0.6),
legend.position = "right") +
labs(title = "Daily number of confirmed cases",
subtitle = "subdivided across departments",
x = "Date of confirmation",
fill = "Department")
theme_set(theme_classic())
region<-colombia_covid$`Departamento o Distrito`
nrows<-10
df <- expand.grid(y = 1:nrows, x = 1:nrows)
categ_table <- round(table(region) * ((nrows*nrows+1)/(length(region))))
df$category<-factor(rep(names(categ_table), categ_table))
waffle_chart <- ggplot(df, aes(x = x, y = y, fill = df$category)) +
geom_tile(color = "black", size = 0.5) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0), trans = 'reverse') +
scale_fill_brewer(palette = "Set3") +
labs(title="Frequency of cases across Departments", subtitle="Waffle Chart") +
theme(#panel.border = element_rect(size = 2),
plot.title = element_text(size = rel(1.2)),
axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
legend.title = element_blank(),
legend.position = "right")
waffle_chart
ggplot(cases, aes(x=Date, y=`Cumulative cases`)) +
geom_point(size=3) +
geom_segment(aes(x=Date,
xend=Date,
y=0,
yend=`Cumulative cases`)) +
labs(title = "Cumulative number of confirmed cases",
x = "Date of confirmation") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
brks <- seq(-250, 250, 50)
lbls <- as.character(c(seq(-250, 0, 50), seq(50, 250, 50)))
ggplot(data=colombia_covid, aes(x=`Departamento o Distrito`, fill = Sexo)) +
geom_bar(data = subset(colombia_covid, Sexo == "F")) +
geom_bar(data = subset(colombia_covid, Sexo == "M"), aes(y=..count..*(-1))) +
scale_y_continuous(breaks = brks,
labels = lbls) +
coord_flip() +
labs(title="Spread of the desease across genders",
y = "Number of cases",
x = "Department",
fill = "Gender") +
theme_tufte() +
theme(plot.title = element_text(hjust = .5),
axis.ticks = element_blank()) +
scale_fill_brewer(palette = "Dark3")
#compute percentage so that we can label more precisely the pie chart
age_groups_pie <- colombia_covid %>%
group_by(`Grupo de edad`) %>%
count() %>%
ungroup() %>%
mutate(per=`n`/sum(`n`)) %>%
arrange(desc(`Grupo de edad`))
age_groups_pie$label <- scales::percent(age_groups_pie$per)
age_pie <- ggplot(age_groups_pie, aes(x = "", y = per, fill = factor(`Grupo de edad`))) +
geom_bar(stat="identity", width = 1) +
theme(axis.line = element_blank(),
plot.title = element_text(hjust=0.5)) +
labs(fill="Age groups",
x=NULL,
y=NULL,
title="Distribution of the desease across ages") +
coord_polar(theta = "y") +
#geom_text(aes(x=1, y = cumsum(per) - per/2, label=label))
geom_label_repel(aes(x=1, y=cumsum(per) - per/2, label=label), size=3, show.legend = F, nudge_x = 0) +
guides(fill = guide_legend(title = "Group"))
age_pie
keep <- c("Sexo", "Grupo de edad")
age_groups <- `Grupo de edad`[names(`Grupo de edad`) %in% keep]
keep <- c("Sexo", "Grupo de edad")
age_groups <- `Grupo de edad`[names(age_groups) %in% keep]
keep <- c("Sexo", "Grupo de edad")
age_groups<-age_groups[names(age_groups)%in%keep]
keep <- c("Sexo", "Grupo de edad")
age_groups<-colombia_covid$`Grupo de edad`[names(colombia_covid$`Grupo de edad`)%in%keep]
age_groups_count <- aggregate(cbind(pop=Sexo) ~ `Grupo de edad` + Sexo,
data=`Grupo de edad`,
FUN = function(x){NROW(x)})
keep <- c("Sexo", "Grupo de edad")
age_groups<-colombia_covid$`Grupo de edad`[names(colombia_covid$`Grupo de edad`)%in%keep]
age_groups_count <- aggregate(cbind(pop=Sexo) ~ colombia_covid$`Grupo de edad` + Sexo,
data=`Grupo de edad`,
FUN = function(x){NROW(x)})
keep <- c("Sexo", "Grupo de edad")
age_groups<-colombia_covid$`Grupo de edad`[names(colombia_covid$`Grupo de edad`)%in%keep]
age_groups_count <- aggregate(cbind(pop=Sexo) ~ `Grupo de edad` + Sexo,
data=colombia_covid,
FUN = function(x){NROW(x)})
age_groups_count$count <- ifelse(age_groups_count$Sexo == "F", age_groups_count$pop * -1, age_groups_count$pop)
age_groups_count<-as.data.frame(age_groups_count[names(age_groups_count)!="pop"])
ggplot(age_groups_count, aes(x=age_group, y=count, fill=Sexo)) +
geom_col() +
#facet_share(~Sexo, dir = "h") +
coord_flip(clip="off") +
theme_minimal() +
labs(title = "Distribution of sex by age",
y = "",
x = "Age group")
keep <- c("Sexo", "Grupo de edad")
age_groups<-colombia_covid$`Grupo de edad`[names(colombia_covid$`Grupo de edad`)%in%keep]
age_groups_count <- aggregate(cbind(pop=Sexo) ~ `Grupo de edad` + Sexo,
data=colombia_covid,
FUN = function(x){NROW(x)})
age_groups_count$count <- ifelse(age_groups_count$Sexo == "F", age_groups_count$pop * -1, age_groups_count$pop)
age_groups_count<-as.data.frame(age_groups_count[names(age_groups_count)!="pop"])
ggplot(age_groups_count, aes(x=`Grupo de edad`, y=count, fill=Sexo)) +
geom_col() +
#facet_share(~Sexo, dir = "h") +
coord_flip(clip="off") +
theme_minimal() +
labs(title = "Distribution of sex by age",
y = "",
x = "Age group")
keep <- c("Sexo", "Grupo de edad")
age_groups<-colombia_covid$`Grupo de edad`[names(colombia_covid$`Grupo de edad`)%in%keep]
age_groups_count <- aggregate(cbind(pop=Sexo) ~ `Grupo de edad` + Sexo,
data=colombia_covid,
FUN = function(x){NROW(x)})
age_groups_count$count <- ifelse(age_groups_count$Sexo == "F", age_groups_count$pop * -1, age_groups_count$pop)
age_groups_count<-as.data.frame(age_groups_count[names(age_groups_count)!="pop"])
ggplot(age_groups_count, aes(x=`Grupo de edad`, y=count, fill=Sexo)) +
geom_col() +
#facet_share(~Sexo, dir = "h") +
coord_flip(clip="off") +
theme_minimal() +
labs(title = "Distribution of sex by age",
y = "",
x = "Age group")
theme_set(theme_classic())
colorCount<-length(unique(colombia_covid$`Departamento o Distrito`))
getPalette<-colorRampPalette(brewer.pal(9, "Spectral"))(colorCount)
ggplot(colombia_covid, aes(x = `Fecha de diagnóstico`)) +
scale_fill_manual(values = getPalette) +
geom_histogram(aes(fill=`Departamento o Distrito`), width = 0.8, stat="count") +
theme(axis.text.x = element_text(angle=65, vjust=0.6),
legend.position = "right") +
labs(title = "Daily number of confirmed cases",
subtitle = "subdivided across departments",
x = "Date of confirmation",
fill = "Department")
