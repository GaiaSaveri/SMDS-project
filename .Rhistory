loo.model.NB.hier<-loo(fit.hier.NB)$estimates
loo.model.NB.hier
mean_inv_phi<-mean(sampling.hier.NB$inv_phi)
mean_y_rep<-colMeans(y_rep)
std_residual<-(data.hier.NB$cases - mean_y_rep) / sqrt(mean_y_rep + mean_y_rep^2*mean_inv_phi)
qplot(mean_y_rep, std_residual, xlab = "predicted", ylab="standardized residuals") + hline_at(2) + hline_at(-2)
df<-df[order(df$dep),]
df<-df[,c(1,4,2,3)]
cc<-read_csv("data/colombia_covid.csv")
central.colombia.dep<-c("Bogotá D.C.", "Tolima", "Cundinamarca", "Meta", "Boyacá", "Quindío", "Cauca", "Valle del Cauca", "Risaralda", "Caldas", "Boyacá", "Antioquia", "Santander", "Casanare")
central.colombia.rows<-which(cc$`Departamento o Distrito` %in% central.colombia.dep)
cc<-cc[central.colombia.rows,]
#df$cumulative_dep<-rep(0,nrow(df))
df <- df %>%
group_by(dep) %>%
mutate(cumulative_dep = cumsum(n))
#try with the poisson model
model.Poisson<-stan_model("stan/poisson_regression.stan")
Poisson.data.complete<-list(
N = nrow(df),
cases = df$cumulative_dep,
time = df$elapsed_time
)
#run the model
fit.Poisson.complete<-sampling(model.Poisson, data=Poisson.data.complete)
#inferred parameters
print(fit.Poisson.complete, pars=c("alpha", "beta"))
loo.model.Poisson.complete<-loo(fit.Poisson.complete)$estimates
#run the model
fit.Poisson.complete<-sampling(model.Poisson, data=Poisson.data.complete)
#inferred parameters
print(fit.Poisson.complete, pars=c("alpha", "beta"))
loo.model.Poisson.complete<-loo(fit.Poisson.complete)$estimates
loo.model.Poisson.complete
y_rep<-as.matrix(fit.Poisson.complete, pars="y_rep")
ppc_dens_overlay(y = Poisson.data.complete$cases, y_rep[1:200,])
#compile the NB model
model.NB<-stan_model("stan/negative_binomial.stan")
#fit
fit.NB.complete<-sampling(model.NB, data=Poisson.data.complete)
#inferred parameters
print(fit.NB.complete, pars=c("alpha", "beta"))
#posterior predictive chiecking
samples.NB.complete<-rstan::extract(fit.NB.complete)
y_rep<-samples.NB.complete$y_rep
ppc_dens_overlay(y = Poisson.data.complete$cases, y_rep[1:200,])
#check residuals --> a lot of point are misplaced!
mean_inv_phi<-mean(samples.NB.complete$inv_phi)
mean_y_rep<-colMeans(y_rep)
std_residual<-(Poisson.data.complete$cases - mean_y_rep) / sqrt(mean_y_rep + mean_y_rep^2*mean_inv_phi)
qplot(mean_y_rep, std_residual) + hline_at(2) + hline_at(-2)
#check looic --> decreased wrt to the poisson case
loo.NB.complete<-loo(fit.NB.complete)$estimates
loo.NB.complete
df$dep_id<-rep(0,nrow(df))
df$dep_id[1:16]<-rep(1,16)
df$dep_id[17:40]<-rep(2,40-17)
df$dep_id[41:45]<-rep(3,45-41)
df$dep_id[46:57]<-rep(4,57-46)
df$dep_id[58:59]<-rep(5,59-58)
df$dep_id[60:63]<-rep(6,63-60)
df$dep_id[64:77]<-rep(7,77-64)
df$dep_id[78:83]<-rep(8,83-78)
df$dep_id[84:92]<-rep(9,92-84)
df$dep_id[93:102]<-rep(10,102-93)
df$dep_id[103:109]<-rep(11,109-103)
df$dep_id[110:115]<-rep(12,115-110)
df$dep_id[116:134]<-rep(13,134-116)
df<-df[,c(1,2,3,6,4,5)]
bogota_mean_age<-cc[which(cc$`Departamento o Distrito`=="Bogotá D.C."),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
cundinamarca_mean_age<-cc[which(cc$`Departamento o Distrito`=="Cundinamarca"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
valle_cauca_mean_age<-cc[which(cc$`Departamento o Distrito`=="Valle del Cauca"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
risaralda_mean_age<-cc[which(cc$`Departamento o Distrito`=="Risaralda"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
antioquia_mean_age<-cc[which(cc$`Departamento o Distrito`=="Antioquia"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
boyaca_mean_age<-cc[which(cc$`Departamento o Distrito`=="Boyacá"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
caldas_mean_age<-cc[which(cc$`Departamento o Distrito`=="Caldas"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
casanare_mean_age<-cc[which(cc$`Departamento o Distrito`=="Casanare"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
cauca_mean_age<-cc[which(cc$`Departamento o Distrito`=="Cauca"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
meta_mean_age<-cc[which(cc$`Departamento o Distrito`=="Meta"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
quindio_mean_age<-cc[which(cc$`Departamento o Distrito`=="Quindío"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
santander_mean_age<-cc[which(cc$`Departamento o Distrito`=="Santander"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
tolima_mean_age<-cc[which(cc$`Departamento o Distrito`=="Tolima"),] %>%
group_by(`Fecha de diagnóstico`) %>%
summarise_at(vars(Edad), funs(mean(.,na.rm=TRUE)))
df$age<-rep(0,nrow(df))
df[which(df$dep_id==1),]$age<-unname(unlist(c(antioquia_mean_age[2])))
df[which(df$dep_id==2),]$age<-unname(unlist(c(bogota_mean_age[2])))
df[which(df$dep_id==3),]$age<-unname(unlist(c(boyaca_mean_age[2])))
df[which(df$dep_id==4),]$age<-unname(unlist(c(caldas_mean_age[2])))
df[which(df$dep_id==5),]$age<-unname(unlist(c(casanare_mean_age[2])))
df[which(df$dep_id==6),]$age<-unname(unlist(c(cauca_mean_age[2])))
df[which(df$dep_id==7),]$age<-unname(unlist(c(cundinamarca_mean_age[2])))
df[which(df$dep_id==8),]$age<-unname(unlist(c(meta_mean_age[2])))
df[which(df$dep_id==9),]$age<-unname(unlist(c(quindio_mean_age[2])))
df[which(df$dep_id==10),]$age<-unname(unlist(c(risaralda_mean_age[2])))
df[which(df$dep_id==11),]$age<-unname(unlist(c(santander_mean_age[2])))
df[which(df$dep_id==12),]$age<-unname(unlist(c(tolima_mean_age[2])))
df[which(df$dep_id==13),]$age<-unname(unlist(c(valle_cauca_mean_age[2])))
model2.NB<-stan_model("stan/NB_model2.stan")
#arrange things
model.df2<-list(
N = nrow(df),
cases = df$cumulative_dep,
time = df$elapsed_time,
age = df$age
)
#fit
fit.model2.NB.complete<-sampling(model2.NB, model.df2)
#posterior predictive chiecking
samples.NB2.complete<-rstan::extract(fit.model2.NB.complete)
y_rep<-samples.NB2.complete$y_rep
ppc_dens_overlay(y = model.df2$cases, y_rep[1:200,])
#some points are out of the interval!
ppc_intervals(
y = df$n,
yrep = y_rep,
x = df$elapsed_time
) +
labs(x = "Days", y = "Cases")
#check residuals --> still a lot of point are misplaced!
mean_inv_phi<-mean(samples.NB2.complete$inv_phi)
mean_y_rep<-colMeans(y_rep)
std_residual<-(model.df2$cases - mean_y_rep) / sqrt(mean_y_rep + mean_y_rep^2*mean_inv_phi)
qplot(mean_y_rep, std_residual) + hline_at(2) + hline_at(-2)
loo.model.NB2.complete<-loo(fit.model2.NB.complete)$estimates
loo.model.NB2.complete #--> didn't improved much :(
#million inhabitants per department
df$people<-rep(0, nrow(df))
df[which(df$dep_id==1),]$people<-6.4
df[which(df$dep_id==2),]$people<-7.4
df[which(df$dep_id==3),]$people<-1.2
df[which(df$dep_id==4),]$people<-0.99
df[which(df$dep_id==5),]$people<-0.4
df[which(df$dep_id==6),]$people<-1.4
df[which(df$dep_id==7),]$people<-2.9
df[which(df$dep_id==8),]$people<-1.04
df[which(df$dep_id==9),]$people<-0.53
df[which(df$dep_id==10),]$people<-0.94
df[which(df$dep_id==11),]$people<-2.18
df[which(df$dep_id==12),]$people<-1.33
df[which(df$dep_id==13),]$people<-4.4
#km^2
antioquia_surface<-63600
bogota_surface<-1775
boyaca_surface<-23189
caldas_surface<-7888
casanare_surface<-44640
cauca_surface<-29308
cundinamarca_surface<-24210
meta_surface<-85635
quindio_surface<-1845
risaralda_surface<-4140
santander_surface<-30537
tolima_surface<-23562
valle_cauca_surface<-22195
#population density inhabitants/km^2
antioquia_density<-88.06
bogota_density<-4552
boyaca_density<-93
caldas_density<-130
casanare_density<-9.4
cauca_density<-50
cundinamarca_density<-99.15
meta_density<-density<-12
quindio_density<-290
risaralda_density<-59.16
santander_density<-72
tolima_density<-56
valle_cauca_density<-183.04
df$surface<-rep(0, nrow(df))
df$density<-rep(0, nrow(df))
df[which(df$dep_id==1),]$surface<-antioquia_surface
df[which(df$dep_id==2),]$surface<-bogota_surface
df[which(df$dep_id==3),]$surface<-boyaca_surface
df[which(df$dep_id==4),]$surface<-caldas_surface
df[which(df$dep_id==5),]$surface<-casanare_surface
df[which(df$dep_id==6),]$surface<-cauca_surface
df[which(df$dep_id==7),]$surface<-cundinamarca_surface
df[which(df$dep_id==8),]$surface<-meta_surface
df[which(df$dep_id==9),]$surface<-quindio_surface
df[which(df$dep_id==10),]$surface<-risaralda_surface
df[which(df$dep_id==11),]$surface<-santander_surface
df[which(df$dep_id==12),]$surface<-tolima_surface
df[which(df$dep_id==13),]$surface<-valle_cauca_surface
df[which(df$dep_id==1),]$density<-antioquia_density
df[which(df$dep_id==2),]$density<-bogota_density
df[which(df$dep_id==3),]$density<-boyaca_density
df[which(df$dep_id==4),]$density<-caldas_density
df[which(df$dep_id==5),]$density<-casanare_density
df[which(df$dep_id==6),]$density<-cauca_density
df[which(df$dep_id==7),]$density<-cundinamarca_density
df[which(df$dep_id==8),]$density<-meta_density
df[which(df$dep_id==9),]$density<-quindio_density
df[which(df$dep_id==10),]$density<-risaralda_density
df[which(df$dep_id==11),]$density<-santander_density
df[which(df$dep_id==12),]$density<-tolima_density
df[which(df$dep_id==13),]$density<-valle_cauca_density
#compile the model
model3.NB<-stan_model("stan/NB_model3.stan")
dep_data.complete<-df %>%
dplyr::select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
dplyr::select(-dep_id) %>%
as.matrix()
#prepare the new data
data.hier.NB.complete<-
with(df,
list(N = nrow(df),
cases = df$cumulative_dep,
time = df$elapsed_time,
age = df$age,
K=3,
J=13,
dep_id = df$dep_id,
dep_data = dep_data.complete
)
)
#fit the model
fit.hier.NB.complete<-sampling(model3.NB, data.hier.NB.complete)
#extract --> rhat is good for all chains
sampling.hier.NB.complete<-rstan::extract(fit.hier.NB.complete)
print(fit.hier.NB.complete, pars=c('phi','beta_t','beta_a','alpha_d','sigma_alpha', 'mu'))
#posterior predictive chiecking
y_rep<-sampling.hier.NB.complete$y_rep
ppc_dens_overlay(y = data.hier.NB.complete$cases, y_rep[1:200,])
#fit the model
fit.hier.NB.complete<-sampling(model3.NB, data.hier.NB.complete)
dep_data.complete<-df %>%
dplyr::select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
dplyr::select(-dep_id) %>%
as.matrix()
dep_data.complete<-df %>%
dplyr::select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
dplyr::select(-dep_id) %>%
as.matrix()
dep_data.complete<-df %>%
dplyr::select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_data.complete<-df %>%
select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_data
dep_data.complete<-df %>%
select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_id
dep_data.complete
dep_data
dep_data.complete<-df %>%
dplyr::select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
dplyr::select(-dep_id) %>%
as.matrix()
dep_data.complete
dep_data.complete<-df %>%
select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_data.complete
dep_data.complete<-df %>%
group_by(dep) %>%
select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_data.complete
dep_data.complete<-df %>%
select(
dep_id,
people,
surface,
density
) %>%
unique() #%>%
dep_data.complete
dep_data.complete<-bind_cols(df, df  %>%
select(
dep_id,
people,
surface,
density
)) %>%
unique()
dep_data.complete<-bind_cols(df, df  %>%
select(
dep_id,
people,
surface,
density
)) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_data.complete
dep_data.complete<-df %>%
select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_data.complete
dep_data.complete<-dep_data.complete %>% as.matrix()
dep_data.complete
dep_data.complete<-dep_data.complete %>% select(-dep)
str(df)
dep_data.complete<-df %>%
select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_data.complete<-df %>%
group_by(dep) %>%
select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_data.complete<-df %>%
select(
dep,
people,
surface,
density
) %>%
unique() %>%
arrange(dep) %>%
select(-dep) %>%
as.matrix()
dep_data.complete<-df %>%
select(
dep_id,
people,
surface,
density
) %>%
unique() %>%
arrange(dep_id) %>%
select(-dep_id) %>%
as.matrix()
dep_data.complete<-dep_data.complete %>% select(-dep)
dep_data.complete<-dep_data.complete %>% dplyr::select(-dep)
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, fig.asp=0.625, dev='png', global.par = TRUE, dev.args=list(pointsize=10), fig.path = 'figs/')
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
library(readr)
library(loo)
library(rstan)
library(dplyr)
library(ggplot2)
library(bayesplot)
library(lubridate)
df<-read_csv("data/central_colombia.csv")
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free_y", ncol = 4, labeller = label_both) +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
data<-read_csv("data/central_colombia_relevant.csv")
data<-data[order(data$dep),]
data<-data[,c(1,5,2,3,4)]
data
model.Poisson<-stan_model("stan/poisson_regression.stan")
model.Poisson<-stan_model("stan/poisson_regression.stan")
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, fig.asp=0.625, dev='png', global.par = TRUE, dev.args=list(pointsize=10), fig.path = 'figs/')
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
library(readr)
library(loo)
library(rstan)
library(dplyr)
library(ggplot2)
library(bayesplot)
library(lubridate)
df<-read_csv("data/central_colombia.csv")
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free_y", ncol = 4, labeller = label_both) +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
data<-read_csv("data/central_colombia_relevant.csv")
data<-data[order(data$dep),]
data<-data[,c(1,5,2,3,4)]
data
model.Poisson<-stan_model("stan/poisson_regression.stan")
model.Poisson<-stan_model("stan/poisson_regression.stan")
model.Poisson<-stan_model("stan/poisson_regression.stan")
