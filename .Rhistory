}
else {
covid_relevant_dp[i,4]<-prev+covid_relevant_dp[i,3]
prev<-covid_relevant_dp[i,4]
}
}
ggplot(covid_relevant_dp, aes(x=date, y=cumulative_dep, fill=dep)) +
geom_bar(stat="identity", show.legend = FALSE) +
facet_grid(dep~., scales="free_y") + #every level has a different count axis
theme_gray() +
theme(strip.text = element_text(face="bold", size=6))+
labs(title = "Cumulative number of cases for different departments",
subtitle = "considering only dept. with more than 30 cases",
x = "Date of confirmation",
y = "count",
fill = "Department")
cumulative<-cumulative %>%
mutate(BETWEEN0=as.numeric(difftime(`Fecha de diagnóstico`,lag(`Fecha de diagnóstico`,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
#just for praticality
names(cumulative)<-c("date", "y", "elapsed_time")
#cumulative
pest_data<-readRDS('../Desktop/pest_data.RDS')
setwd(Desktop)
setwd('../Desktop')
setwd('Desktop')
setwd('Desktop')
pest_data<-readRDS('../Desktop/pest_data.RDS')
pest_data<-readRDS('pest_data.RDS')
setwd("~/Desktop")
pest_data<-readRDS("pest_data.RDS")
pest_data
View(pest_data)
View(pest_data)
setwd("~/Desktop/SMDS-project")
colombia_covid
write_csv(colombia_covid, "central_colombia.csv")
covid_relevant_dp
covid_dp
write_csv(covid_dp, "central_colombia.csv")
cumulative
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
names(covid_dp)
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, fig.asp=0.625, dev='png', global.par = TRUE, dev.args=list(pointsize=10), fig.path = 'figs/')
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
library(readr)
library(dplyr)
library(ggplot2)
library(RColorBrewer)
library(leaflet)
library(geojsonio)
library(htmltools)
library(htmlwidgets)
colombia_covid <- read_csv("data/colombia_covid.csv")
ggplot(covid_relevant_dp, aes(x=date, y=cumulative_dep, fill=dep)) +
geom_bar(stat="identity", show.legend = FALSE) +
facet_grid(dep~., scales="free_y") + #every level has a different count axis
theme_gray() +
theme(strip.text = element_text(face="bold", size=6))+
labs(title = "Cumulative number of cases for different departments",
subtitle = "considering only dept. with more than 30 cases",
x = "Date of confirmation",
y = "count",
fill = "Department")
#write_csv(covid_dp, "central_colombia.csv")
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(`Fecha de diagnóstico``,lag(`Fecha de diagnóstico``,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(`Fecha de diagnóstico`,lag(`Fecha de diagnóstico`,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(`date`,lag(`date`,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp<-as.data.frame(covid_dp)
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
#select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))#%>%
#select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
?lag
covid_dp[1]
covid_dp[1,]
covid_dp%>%as.numeric(difftime(date,lag(date,1))
covid_dp%>%as.numeric(difftime(date,lag(date,1))
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
?difftime
covdi_dp
covid_dp
covid_dp %>%
select(-`elapsed_time`)
covid_dp$date<-as.Date(covid_dp$date)
covid_dp
covid_dp$date<-as.Date(covid_dp$date, "%Y-%m-%d")
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1))),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp$date[1]
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,date[1])),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,date[1], units = "days")),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
covid_dp<-covid_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1), units = "days")),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_dp
write_csv(covid_dp, "central_colombia.csv")
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
library(rstan)
library(dplyr)
library(ggplot2)
library(bayesplot)
library(lubridate)
setwd("~/Desktop/SMDS-project")
df<-read_csv("central_colombia.csv")
str(df)
df<-read_csv("central_colombia.csv")
ggplot(df, aes(x = n)) +
geom_bar()
ggplot(df, aes(x = dep)) +
geom_bar()
ggplot(df, aes(x = dep, y=n)) +
geom_bar()
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free", ncol = 2, labeller = label_both) +
scale_x_date(name = "Date", date_labels = "%b") +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free", ncol = 4, labeller = label_both) +
scale_x_date(name = "Date", date_labels = "%b") +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free_y", ncol = 4, labeller = label_both) +
scale_x_date(name = "Date", date_labels = "%b") +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free_y", ncol = 4, labeller = label_both) +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
df
covid_relevant_dp
covid_relevant_dp
covid_relevant_dp<-as.data.frame(covid_relevant_dp)
covid_dp$date<-as.Date(covid_dp$date, "%Y-%m-%d")
covid_relevant_dp<-covid_relevant_dp %>%
mutate(BETWEEN0=as.numeric(difftime(date,lag(date,1), units = "days")),BETWEEN=ifelse(is.na(BETWEEN0),0,BETWEEN0),elapsed_time=cumsum(as.numeric(BETWEEN)))%>%
select(-c(BETWEEN0,BETWEEN))
covid_relevant_dp
write_csv(covid_relevant_dp, "central_colombia_relevant.csv")
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free_y", ncol = 4, labeller = label_both) +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
data<-read_csv("central_colombia_relevant")
data<-read_csv("central_colombia_relevant.csv")
head(data)
data<-read_csv("central_colombia_relevant.csv")
head(data)
data<-read_csv("central_colombia_relevant.csv")
head(data)
write_csv(covid_relevant_dp, "central_colombia_relevant.csv")
data<-read_csv("central_colombia_relevant")
write_csv(covid_relevant_dp, "central_colombia_relevant.csv")
data<-read_csv("central_colombia_relevant.csv")
head(data)
data<-data[order(dep),]
data<-data[order(data$dep),]
data
data<-data[,c(1,5,2,3,4)]
data
head(data)
View(data)
model.Poisson<-stan_model("stan/poisson_regression.stan")
model.Poisson<-stan_model("stan/poisson_regression.stan")
model.Pisson.data<-list(
N = nrow(data),
cases = data$n,
time = data$elapsed_time
)
model.Poisson.data<-list(
N = nrow(data),
cases = data$n,
time = data$elapsed_time
)
str(model.Poisson.data)
#run the model
fit.model.Poisson<-sampling(model.Poisson, data=model.Poisson.data)
#inferred parameters
print(fit.model.Poisson, pars=c("alpha", "beta"))
mcmc_scatter(as.matrix(fit.model.Poisson, pars=c("alpha", "beta") ), alpha=0.2)
y_rep<-as.matrix(fit.model.Poisson, pars="y_rep")
ppc_dens_overlay(y = model.Poisson.data$cases, y_rep[1:200,])
mean_y_rep<-colMeans(y_rep)
std_residual<-(model.Poisson.data$n - mean_y_rep) / sqrt(mean_y_rep)
qqplot(mean_y_rep, std_residual)
qplot(mean_y_rep, std_residual)
mean_y_rep
length(mean_y_rep)
length(std:residual)
length(std_residual)
std_residual<-(model.Poisson.data$cases - mean_y_rep) / sqrt(mean_y_rep)
qplot(mean_y_rep, std_residual)
qplot(mean_y_rep, std_residual) + hline(3) + hline(-3)
qplot(mean_y_rep, std_residual) + hline_at(3) + hline_at(-3)
theme_set(bayesplot::theme_default())
ppc_dens_overlay(y = model.Poisson.data$cases, y_rep[1:200,])
qplot(mean_y_rep, std_residual) + hline_at(3) + hline_at(-3)
qplot(mean_y_rep, std_residual) + hline_at(2) + hline_at(-2)
qplot(mean_y_rep, std_residual) + hline_at(2) + hline_at(-2)
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, fig.asp=0.625, dev='png', global.par = TRUE, dev.args=list(pointsize=10), fig.path = 'figs/')
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
library(rstan)
library(dplyr)
library(ggplot2)
library(bayesplot)
library(lubridate)
df<-read_csv("central_colombia.csv")
library(readr)
df<-read_csv("central_colombia.csv")
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, fig.asp=0.625, dev='png', global.par = TRUE, dev.args=list(pointsize=10), fig.path = 'figs/')
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
library(readr)
library(rstan)
library(dplyr)
library(ggplot2)
library(bayesplot)
library(lubridate)
df<-read_csv("central_colombia.csv")
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free_y", ncol = 4, labeller = label_both) +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
data<-read_csv("central_colombia_relevant.csv")
data<-data[order(data$dep),]
data<-data[,c(1,5,2,3,4)]
head(data)
model.Poisson<-stan_model("stan/poisson_regression.stan")
#arrange things
model.Poisson.data<-list(
N = nrow(data),
cases = data$n,
time = data$elapsed_time
)
#str(model.Poisson.data)
#run the model
fit.model.Poisson<-sampling(model.Poisson, data=model.Poisson.data)
#inferred parameters
print(fit.model.Poisson, pars=c("alpha", "beta"))
theme_set(bayesplot::theme_default())
mcmc_scatter(as.matrix(fit.model.Poisson, pars=c("alpha", "beta") ), alpha=0.2)
y_rep<-as.matrix(fit.model.Poisson, pars="y_rep")
ppc_dens_overlay(y = model.Poisson.data$cases, y_rep[1:200,])
#in this way we check the standardized residuals
mean_y_rep<-colMeans(y_rep)
length(std_residual)
std_residual<-(model.Poisson.data$cases - mean_y_rep) / sqrt(mean_y_rep)
qplot(mean_y_rep, std_residual) + hline_at(2) + hline_at(-2)
mean_y_rep<-colMeans(y_rep)
std_residual<-(model.Poisson.data$cases - mean_y_rep) / sqrt(mean_y_rep)
qplot(mean_y_rep, std_residual) + hline_at(2) + hline_at(-2)
df<-read_csv("data/central_colombia.csv")
model.NB<-stan_model("stan/negative_binomial.stan")
model.NB<-stan_model("stan/negative_binomial.stan")
model.NB<-stan_model("stan/negative_binomial.stan")
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, fig.asp=0.625, dev='png', global.par = TRUE, dev.args=list(pointsize=10), fig.path = 'figs/')
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
library(readr)
library(rstan)
library(dplyr)
library(ggplot2)
library(bayesplot)
library(lubridate)
df<-read_csv("data/central_colombia.csv")
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free_y", ncol = 4, labeller = label_both) +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
data<-read_csv("data/central_colombia_relevant.csv")
data<-data[order(data$dep),]
data<-data[,c(1,5,2,3,4)]
head(data)
model.Poisson<-stan_model("stan/poisson_regression.stan")
#arrange things
model.Poisson.data<-list(
N = nrow(data),
cases = data$n,
time = data$elapsed_time
)
#str(model.Poisson.data)
#run the model
fit.model.Poisson<-sampling(model.Poisson, data=model.Poisson.data)
#inferred parameters
print(fit.model.Poisson, pars=c("alpha", "beta"))
theme_set(bayesplot::theme_default())
mcmc_scatter(as.matrix(fit.model.Poisson, pars=c("alpha", "beta") ), alpha=0.2)
y_rep<-as.matrix(fit.model.Poisson, pars="y_rep")
ppc_dens_overlay(y = model.Poisson.data$cases, y_rep[1:200,])
#in this way we check the standardized residuals
mean_y_rep<-colMeans(y_rep)
std_residual<-(model.Poisson.data$cases - mean_y_rep) / sqrt(mean_y_rep)
qplot(mean_y_rep, std_residual) + hline_at(2) + hline_at(-2)
model.NB<-stan_model("stan/negative_binomial.stan")
model.NB<-stan_model("stan/negative_binomial.stan")
debug(rstan::stanc)
writeLines("stan/negative_binomial.stan")
install.packages(c("lubridate", "readr"))
knitr::opts_chunk$set(fig.align = 'center', warning=FALSE, message=FALSE, fig.asp=0.625, dev='png', global.par = TRUE, dev.args=list(pointsize=10), fig.path = 'figs/')
library(knitr)
local({
hook_plot = knit_hooks$get('plot')
knit_hooks$set(plot = function(x, options) {
paste0('\n\n----\n\n', hook_plot(x, options))
})
})
knitr::opts_chunk$set(echo = TRUE, tidy = TRUE)
library(readr)
library(rstan)
library(dplyr)
library(ggplot2)
library(bayesplot)
library(lubridate)
df<-read_csv("data/central_colombia.csv")
ggplot(df, aes(x = date, y = n)) +
geom_line(aes(linetype = "New daily cases")) +
geom_point(color = "black") +
facet_wrap(~dep, scales = "free_y", ncol = 4, labeller = label_both) +
scale_y_continuous(name = "", limits = range(df$n)) +
scale_linetype_discrete(name = "")
data<-read_csv("data/central_colombia_relevant.csv")
data<-data[order(data$dep),]
data<-data[,c(1,5,2,3,4)]
head(data)
model.Poisson<-stan_model("stan/poisson_regression.stan")
#arrange things
model.data<-list(
N = nrow(data),
cases = data$n,
time = data$elapsed_time
)
#str(model.Poisson.data)
#run the model
fit.model.Poisson<-sampling(model.Poisson, data=model.data)
#inferred parameters
print(fit.model.Poisson, pars=c("alpha", "beta"))
theme_set(bayesplot::theme_default())
mcmc_scatter(as.matrix(fit.model.Poisson, pars=c("alpha", "beta") ), alpha=0.2)
y_rep<-as.matrix(fit.model.Poisson, pars="y_rep")
ppc_dens_overlay(y = model.data$cases, y_rep[1:200,])
#in this way we check the standardized residuals
mean_y_rep<-colMeans(y_rep)
std_residual<-(model.data$cases - mean_y_rep) / sqrt(mean_y_rep)
qplot(mean_y_rep, std_residual) + hline_at(2) + hline_at(-2)
#compile
model.NB<-stan_model("stan/negative_binomial.stan")
#fit
fit.model.NB<-sampling(model.NB, data=model.data)
#inferred parameters
print(fit.model.NB)
y_rep<-as.matrix(fit.model.NB, pars="y_rep")
ppc_dens_overlay(y = model.data$cases, y_rep[1:200,])
y_rep<-as.matrix(fit.model.NB, pars="y_rep")
y_rep
#fit
fit.model.NB<-sampling(model.NB, data=model.data)
#compile
model.NB<-stan_model("stan/negative_binomial.stan")
#fit
fit.model.NB<-sampling(model.NB, data=model.data)
#inferred parameters
print(fit.model.NB)
#inferred parameters
print(fit.model.NB, pars=c("alpha", "beta"))
y_rep<-as.matrix(fit.model.NB, pars="y_rep")
ppc_dens_overlay(y = model.data$cases, y_rep[1:200,])
ppc_dens_overlay(y = model.data$cases, y_rep[1:200,])
#posterior predictive chiecking
samples_NB<-rstan::extract(fit.model.NB)
y_rep<-samples_NB$y_rep
ppc_dens_overlay(y = model.data$cases, y_rep[1:200,])
ppc_stat(y=model.data$cases, yrep=y_rep, stat="prop_zero")
prop_zero<-function(x)(mean(x==0))
ppc_stat(y=model.data$cases, yrep=y_rep, stat="prop_zero")
#run the model
fit.model.Poisson<-sampling(model.Poisson, data=model.data)
#inferred parameters
print(fit.model.Poisson, pars=c("alpha", "beta"))
y_rep<-as.matrix(fit.model.Poisson, pars="y_rep")
ppc_dens_overlay(y = model.data$cases, y_rep[1:200,])
ppc_stat(y=model.data$cases, yrep=y_rep, stat="prop_zero")
#fit
fit.model.NB<-sampling(model.NB, data=model.data)
#inferred parameters
print(fit.model.NB, pars=c("alpha", "beta"))
#posterior predictive chiecking
samples_NB<-rstan::extract(fit.model.NB)
y_rep<-samples_NB$y_rep
ppc_dens_overlay(y = model.data$cases, y_rep[1:200,])
mean_y_rep<-colMeans(y_rep)
mean_inv_phi<-mean(samples_NB$inv_phi)
mean_y_rep<-colMeans(y_rep)
std_residual<-(model.data$cases - mean_y_rep) / sqrt(mean_y_rep + mean_y_rep^2*mean_inv_phi)
qplot(mean_y_rep, std_residual) + hline_at(2) + hline_at(-2)
ppc_stat_grouped(
y = model.data$cases,
yrep = y_rep,
group = data$dep,
stat = "mean",
bandwidth = 0.2
)
ppc_stat_grouped(
y = model.data$cases,
yrep = y_rep,
group = data$dep,
stat = "mean",
binwidth = 0.2
)
